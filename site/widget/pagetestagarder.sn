

{{ //   ?test=true&test1=true
    %include "/extenso/functions/sn_ct.snc";
    %include "/extenso/functions/sn_pages.snc";

   //session 
    %include "/extenso/functions/sessions.snc"; 
    
    use page;
    use lg;

    %include "/site/package/all.sn";     //Pour publication des Widget et Automail
    
    ////////  pour choisir ce qu'on veut voir    taper "goA"      pour la section A
    //////// stripos(cgidata.code     
    
}}
    <script type="text/javascript" src="/js/datepicker/jquery-ui-i18n.min.js"></script>
    <!--<script type="text/javascript" src="/js/jquery.tablesorter.js"></script>-->
    <link rel="stylesheet" href="css/datepicker/themes/theme1.css" /> <!-- for datepicker   -->
   <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js">      </script>
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.17/jquery-ui.min.js">        </script>

<script>
   try {
    //something that causes an error
    } catch (ex){
        if (ex instanceof TypeError){
            //handle the error
        } else if (ex instanceof ReferenceError){
            //handle the error
        } else {
            //handle all others
        }
    }
</script>
\{{       
    
   //function showTable()
  
   
    
        cgidata = cgidata();
        use extranet_user;     //  ajouter  ?test=true  
        time = time();
        if stripos(cgidata.code,"go") >=  0 then   
            SHOW = true;  //montre le data  mettre Ã  true
        endif
        //"<br>cgidata.code=".+cgidata.code;
        projets = sql("SELECT uid  ,uid_service, uid_subservice description FROM sr_project where uid = '?'", 4689);
        
        // extranet_user.uid;
        // cgidata;
if cgidata.test eq  true then      //?test=true  
            cgidata;
            extranet_user;
         
endif
            
/*              '<button   class="btn btn-delete fa fa-stop"></button>';
              '<table  class="  ">
                <tr>
                    <th>No</th><th>uid</th><th>service</th><th>sous-service</th><th>4</th><th>5</th><th>6</th>
                </tr>';
                n=1;
                for projet in projets.rows do
                    "<tr>
                        <td>".+ n .+ "</td><td>" .+ projet.uid .+ "</td><td>" .+ projet.uid_service .+ "</td> 
                    </tr>";
                    n++;
                endfor
                "</table>";
*/   // endf
}}

    <!--<table>-->
    <!--    <tr>-->
    <!--        <td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td>-->
    <!--    </tr>-->
    <!--    <tr>-->
    <!--        <td></td><td></td><td>3</td><td>4</td><td>5</td><td>6</td>-->
    <!--    </tr>-->
    <!--    <tr>-->
    <!--        <td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td>-->
    <!--    </tr>-->
        
    <!--</table>-->

\{{ /* endif  */}}
\{{/*automail::notifyAdminContractorInscription(4689);*/}}
\{{/*automail::contractorActivation(4689);*/}}
\{{/* automail::test_suggestProjectToContractor("17840","4398","sr500-test@yahoo.com")*/;
                       //         (uid_project,uid_contractor,to_email)    
}}

\{{
    //automail::test_notifyContractorWinProject("564105",email_to:"sr500-adm@yahoo.com",cc_email:"sr500-sr2@yahoo.com",lg:"en");
                // uid_project_contractor,email_to
}}

\{{ //   automail::sendSatisfactionSurveyToClient(18078); //de bbduc   project Id   client  
}}

\{{  //envoie de courriel direct
    
    // automail::test_sendEmail(
    //             "test",
    //             to: "sr500-sr2@yahoo.com", 
    //             lg:lg
    //         );
            
            
    // automail::test_sendEmail(
    //             "sendSatisfactionSurveyToClient",
    //             to: "bbduc@yahoo.com", 
    //             lg:"fr"
    //         );


    // function send_test()   
    //     email_from = 'sr500-sr2@yahoo.com';
    //     email_to   = 'sr500-sr2@yahoo.com';
    //     subject    = 'test de courriel';
                
    //     config = config();  
    //     // get default infos
    //     configs = sql(single:true, "SELECT default_admin_email,default_from_address,email_test_mode,email_test FROM sn_configs WHERE uid=1 LIMIT 1");
    //     lg='fr';
    //     email_code = 'notifyContractorWinProject';
    // //    file = "/" .+ config.site .+ "/email/".+lg.+"/" .+ email_code .+ ".snc";
    //     file = "/" .+ config.site .+ "/emails/fr/courriel_test.snc";
    
    //     void email(
    //                     from: email_from,
    //                     to: email_to,
    //                     subject: subject,
    //                     ct:"text",
    //                     charset: "utf-8",
    //                     //file: email.file,
    //                     encoding:"base64",
    //                     domain: 'soumissionrenovation.ca'
    //                 ); 
    
    // endf    
    

}}



\{{//automail::notifyContractorWinProject("564105");
}}

\{{//automail::sendSatisfactionSurveyToClient("17878");
}}

\{{//contractor::activateContractor(4507);}}
\{{//automail::contractorProfileReminder1("sr500-sr@yahoo.com","BBBBBB",4507);

    
}}
\{{
    //contractorProfileReminder1(contact_email, name, id_appels_entrepreneurs)


 /*   contractor = {
            "contact_firstname":"test",
            "contact_phone":"514-124-3569",
            "contact_email":"sr500-sr@yahoo.com",
            "company_name":"cie",
            "ip": "123.23.23.32",
            "url":"www.www.www"
        };
        
        //void insert(table:'sr_debug', fields:{'description': test_create login'text':'sr500-sr@yahoo.com'});
        automail::notifyAdminContractorRequestInformation(contractor);
        //http://sr.sednove.ca/fr/entrepreneur-creer-identifiant?token=99
  */      
}}    


<!--<input type="text"></input>-->


\{{ if extranet_user.uid == 0 then   }}

    <button class="btn">Open</button>

 \{{ endif    }}



{{
   
 //STATS
 /*
 par service   acceptations 
 par contracteur
 
 
 
 */
    
}}




<style>
table {
    width:100%;
}
table, th, td {
    border: 1px solid black;
    border-collapse: collapse;
}
th, td {
    padding: 5px;
    text-align: left;
}
table#t01 tr:nth-child(even) {
    background-color: #eee;
}
table#t01 tr:nth-child(odd) {
  background-color:#fff;
}
table#t01 th {
    background-color: black;
    color: white;
}
</style>


{{  
/*    
    uid_project =1;
    token=999;
    
    function quoteRequestToClient(uid_project)//C01
    //function quoteRequestToAdmin(uid_project)//C02
function projectActivatedClient(uid_project)//C03
    // function projectActivatedAdmin(uid_project)//C04
ok  function suggestProjectToContractor(token)/C05
ok    // function test_suggestProjectToContractor(uid_project,uid_contractor,to_email;...)//C05Test
    function sendContractorToClient(uid_project_contractor)//C06
ok    //function notifyContractorWinProject(uid_project_contractor)//C07
ok    //function test_notifyContractorWinProject(uid_project_contractor;...)    //email_to)  C07A
    // function notifyAdminContractorAcceptQuoteProject(uid_project_contractor)//C08
    function sendInvoicePdf(uid_contractor, pdf)//C09  Faire transaction
    function paymentFailedToContractor(uid_contractor, cardinfo, amount)//C10
    //function paymentFailedToAdmin(uid_contractor, cardinfo, amount)//C11
    function sendSatisfactionSurveyToClient(uid_project)//C12
    //function notifyAdminContractorRequestInformation(contractor)//C13
    //function notifyAdminContractorInscription(uid_contractor)//C14
    //function notifyAdminModifyContractorProfile(before_info, after_info) //C15
    //function notifyAdminContractorCreditProject(uid_contractor, uid_project) //C16
    //function notifyAdminContractorChangeTerritory(uid_contractor) //C17
    //function notifyAdminContractorAddService(uid_contractor, services_uid) //C18
    //function contractorSuggestionToAdmin(uid_contractor, suggestion) //C19
@function contractorActivation(uid_contractor)//C20
    function contractorForgotPassword(uid_contractor)//C21
    //function notifyAdminErrorScript(uid_project) //C22
    function appologiesToClientNotEnoughQuotes(uid_project) //C23
    function contractorAccountBlocked(uid_contractor) //C24
    function contractorProfileReminder1(contact_email, name, id_appels_entrepreneurs, lg) //C25
    function contractorProfileReminder2(contact_email, name, id_appels_entrepreneurs, lg) //C26
    function contractorProfileReminder3(contact_email, name, id_appels_entrepreneurs, lg) //C27
    okfunction creditApproved(uid_credit)//C28
    function creditDenied(uid_credit, reason) //C29
    //function notifyAdminClientSatisfactionSite(uid_project) //C30

*/    
}}


\{{ //SEND EMAIL FOR TEST
    if stripos(cgidata.code,"a") >= 2  then}}


\{{
    for contractor sql("
        SELECT  c.uid,
                IF(specialist = 'yes', 1, 0) as specialist,
                IF(credit_cards = 'yes', 2, 0) as credit_cards,
                note_sr,
                (
                    SELECT IFNULL(AVG(pc.client_satisfaction), 3)
                    FROM sr_project_contractor pc 
                    WHERE pc.accepted = 'yes' 
                    AND pc.uid_contractor = c.uid
                ) as avg_satisfaction_project,
                (
                    SELECT count(*)
                    FROM sr_credit cr
                    WHERE cr.accepted = 'yes'
                    AND cr.uid_project_contractor IN (SELECT pc.uid FROM sr_project_contractor pc WHERE pc.uid_contractor = c.uid)
                ) as nb_accepted_credits,
                (
                    SELECT count(*)
                    FROM sr_project_contractor pc 
                    WHERE pc.uid_contractor = c.uid
                    AND pc.accepted = 'yes'
                ) as nb_accepted_projects,
                (
                    SELECT TIMESTAMPDIFF(DAY, max(accepted_date), now()) as age
                    FROM sr_project_contractor   pc
                    WHERE pc.uid_contractor = c.uid
                    AND  accepted = 'yes'
                    GROUP BY pc.uid_contractor
                ) as age
        FROM sr_contractor c
        WHERE c.uid = 2
    ") do
    taux_credit = (contractor.rows.nb_accepted_projects == 0)? 0 : (contractor.rows.nb_accepted_credits / contractor.rows.nb_accepted_projects);
    point_age = (contractor.rows.age > 180)? 3 : 0;   //deduct 3 points if more than 3 month
    note = 0.0 // make sure its a double
         + contractor.rows.avg_satisfaction_project
         + contractor.rows.specialist 
         + contractor.rows.credit_cards
         + contractor.rows.note_sr 
         + taux_credit * -3
         - point_age
        ;
        "<br>Points->".+
          contractor.rows.avg_satisfaction_project.+',  ';
          contractor.rows.specialist .+',  ';
          contractor.rows.credit_cards.+',  ';
          contractor.rows.note_sr .+',  ';
          taux_credit * -3.+',  ';
          "   age point=".+point_age.+',  ';
        
        "<br>age=".+contractor.rows.age;
        "<br>note=".+note;
        "<br>";
endfor
subject = 'test';
subject;
//void insert(table:'sr_log', fields:{'uid_project_contractor':'','uid_project':'', 'email_to':''  ,'email_from':'','description':'subject',
//                                                'value':subject,'type':'sendEmail','priority':1});

savexls(
        [
            ['title1','title2'],
            ['aaa',123],
            [124,'dfg']
        ]
        ,'/site/test.xls'
        ,true);

    
}}

<script>
arrayToTable = function(data, options = {}){
	var table = $('<table />'),
	    thead,
	    tfoot,
	    rows = [],
	    row,
	    i, j,
    	defaults = {
			th: true, // should we use th elemenst for the first row
			thead: false, //should we incldue a thead element with the first row
			tfoot: false, // should we include a tfoot element with the last row
			attrs: {} // attributes for the table element, can be used to
		}

	options = $.extend(defaults, options);

	table.attr(options.attrs)

	// loop through all the rows, we will deal with tfoot and thead later
	for(i = 0; i < data.length; i++){
		row = $('<tr />');
		for(j = 0; j < data[i].length; j++){
			if(i == 0 && options.th){
				row.append($('<th />').html(data[i][j]));
			}else{
				row.append($('<td />').html(data[i][j]));
			}
		}
		rows.push(row);
	}

	// if we want a thead use shift to get it
	if(options.thead){
		thead = rows.shift();
		thead = $('<thead />').append(thead);
		table.append(thead);
	}

	// if we want a tfoot then pop it off for later use
	if(options.tfoot){
		tfoot = rows.pop();
	}

	// add all the rows
	for (i = 0; i < rows.length; i++) {
		table.append(rows[i]);
	};

	// and finally add the footer if needed
	if(options.tfoot){
		tfoot = $('<tfoot />').append(tfoot);
		table.append(tfoot);
	}
	return table;
}
	
    var data = [
		['Name', 'Age', 'Email'],
		['John Doe', '27', 'john@doe.com'],
		['Jane Doe', '29', 'jane@doe.com']
	];
	
	var table = arrayToTable(data, {
		thead: true,
		attrs: {class: 'table'}
	})

$('#tbl1').text("test");
	$('#tbl').append(table);
</script>


<div  id="tbl1"> </div>
<div  id="tbl"> Tbl   
</div>









\{{endif}}

\{{ //SEND EMAIL FOR TEST
    if stripos(cgidata.code,"B") >= 2  then}}

\{{
    contractor = sql(single:true,"
        SELECT  c.uid,
                (
                    SELECT count(*)
                    FROM sr_project_contractor pc 
                    WHERE pc.accepted = 'yes' 
                   
                ) as nb_accepted_projects,
                (
                    SELECT count(*)
                    FROM sr_credit cr
                    WHERE cr.accepted = 'yes'
                    
                ) as nb_accepted_credits,
                (
                    SELECT count(*)
                    FROM sr_project p 
                ) as nb_projects,
                 (
                    SELECT count(*)
                    FROM sr_project_contractor pc 
                 ) as nb_pc
        FROM sr_contractor c
        
    ") ;

  // "<br>contractor=".+contractor;    
   
   "<br>PC accepted".+ contractor.rows.nb_accepted_projects.+" -cr= ".+    contractor.rows.nb_accepted_credits .+ " -nb Projects".+
     contractor.rows.nb_projects.+" -nb_pc= ".+       contractor.rows.nb_pc .+ "<br><br>";
}}
\{{endif}}

\{{ //SEND EMAIL FOR TEST
    // if stripos(cgidata.code,"C") >= 2  then
    
}}
\{{
    pc_token='999';  //Project for ADI(4689)
    uid_project ='17877';
    uid_contractor='4689'; //ADI
    lg = 'en';
    to_email = "sr500-adi@yahoo.com";
    //to_email = "mjodoin@soumissionrenovation.ca";
    uid_client= '17619';
    uid_credit = '5558';
    uid_project_contractor = '559153';
    reason = 'english test';
    cardinfo = '444***';
    amount   =  123.45;
    contact_email =  to_email;
    name  =' test  test2';
    id_appels_entrepreneurs =  uid_project; 
    
    if false then
        void sql("UPDATE sr_contractor SET contact_lg = 'fr' WHERE sr_contractor = '?'", 4689);
    endif
    
    //  update language pour le contracteur
   
    //automail::test_suggestProjectToContractor("17840","4398","sr500-adi@yahoo.com",lg:'en');
                          //      (uid_project,uid_contractor,to_email:..)      sr500-test@yahoo.com
        
            //teste reminder
           // laplante  automail::contractorProfileReminder1("laplante@sednove.com", "ADI1", "71040", "en");
            //automail::contractorProfileReminder1("sr500-adi2@yahoo.com", "ADI1", "71040", "en");
                       //(contact_email, name, id_appels_entrepreneurs, lg)
            //automail::contractorProfileReminder2("sr500-adi2@yahoo.com", "ADI2", "71039", "en");
                       //(contact_email, name, id_appels_entrepreneurs, lg)
            //automail::contractorProfileReminder3("sr500-adi2@yahoo.com", "ADI3", "71038", "en");
                       //(contact_email, name, id_appels_entrepreneurs, lg)
            
    //automail::test2_suggestProjectToContractor(uid_contractor, 18623, lg, to_email); //Test C05
    // automail::contractorActivation(uid_contractor);   //test C20 
    // automail::test_creditApproved(uid_contractor, uid_project, lg, to_email, uid_credit: uid_credit); //C28
    // automail::sendInvoicePdf(uid_contractor, pdf);//C09  transaction
    // automail::paymentFailedToContractor(uid_contractor, cardinfo, amount);//C10
    // automail:: contractorActivation(uid_contractor);//C20  @@
     
    // automail::contractorForgotPassword(uid_contractor);//C21
    // automail::contractorAccountBlocked(uid_contractor);  //C24  @
    // automail::creditApproved(uid_credit); //C28
    // automail::creditDenied(uid_credit, reason); //C29
/*    automail::contractorProfileReminder1(to_email, name, 17877, lg);
    automail::contractorProfileReminder2(to_email, name, 17877, lg); //C26
    automail::contractorProfileReminder3(to_email, name, 17877, lg); //C27
    lg ='fr';
    automail::contractorProfileReminder1(to_email, name, 17877, lg);
    automail::contractorProfileReminder2(to_email, name, 17877, lg); //C26
    automail::contractorProfileReminder3(to_email, name, 17877, lg); //C27
*/   

    void insert(table:'sr_debug', fields:{'description':'test_V1','text':tst});
    taxes = contractor::calculateTaxesByProv(200, uid_contractor);
    "Total avec Taxes=".+taxes.total.+'<br>';
    //taxes; 
    //------
    "<br>Date=".+datetime(date:'2017-01-017',format:"%Y %m %d");
    
    
    //------
     //contractor::Test_Billing(uid_contractor,lg);
    //void insert(table:'sr_debug', fields:{'description':'test_Billing','text':'aprÃ¨s appel '.+uid_contractor});
     '-7890-';
    //automail::sendContractorToClient(uid_project_contractor); //C06
     
     
    // //Client
     automail::quoteRequestToClient(uid_project); //C01
     automail::projectActivatedClient(uid_project); //C03
     automail::sendSatisfactionSurveyToClient(uid_project); //C12  @
     automail::appologiesToClientNotEnoughQuotes(uid_project);  //C23


    /*  note:
        //url = sql(single:true, "SELECT url_prod FROM sn_configs");
    // url for Renoquotes
    url = sql(single:true, "SELECT url_prod_alt_{{lg.rows.lg}} as url_prod FROM sn_configs");
    url = url.rows.url_prod;
   	url_link = url .+ "{{ pages('sr_contractor_create_login', lg.rows.lg , table:pages); }}?token=" .+ contractor.rows.token;

*/
    
    time.secs;
           
}}
\{{ //endif
    
}}


\{{ //if (SHOW eq 'true')  then
    
}}
\{{ //Request   etc
    if stripos(cgidata.code,"C") >= 2  then}}


\{{ extranet_user;
    request = request(); 
    //request.uri; "\n";
    '<br>22222request=';
   // request;
   "<br>";
   "request.args=".+request.args;
   "<br>";
   res=parse_query_string(request.args); 
   res;
   "res.code=".+res.code;
   
    config = config();
   
    //'<br>request.uri='.+request.uri;
  
    '<br>config=';config; 
    '<br>user=';user; 
    
    // cgidata=cgidata();
    //'<br>Cgidata='.+cgidata;
 }}  
\{{endif}}
 
 
\{{ //Request   etc
    if stripos(cgidata.code,"S") >= 2  then}}
 
 
        \{{ 
                 "<br>SESSION<br>";
             
    session_set("cre","JJJ", exp:"+300s");
    '123456-';
 
    tst=session_get("cre");
    "<br>cre=".+tst;
    
    void insert(table:'sr_debug', fields:{'description':'test_cre','text':tst});
    tst=session_get("V1");
    tst;
    "<br>V1=".+tst.+"<br>";
   request = request();
   "request.args=".+request.args;
   "<br>";
   res=parse_query_string(request.args); 
   res;
   "res.code=".+res.code;
   "<br>";
    tst=session_get("adwords");
    tst;
    "<br>adwords=".+tst;
     "<br>";
    session_del("adwords");

/*    
            session_set("captcha",c[1], exp:"+300s");
            session_get("captcha");
            session_del("key1","key2");
*/
//test time session            
/*            a=time();
        //??   session_exp(db:"/hash/session.db");
            key = random(min:1, max:1000, init:true, seed:1);
            value = session_get(db:"/hash/session.db", key);
            n=0;
            for (i=1;i<10000;++i) do
            	key = random(min:1, max:1000);
            	value = session_get(db:"/hash/session.db", key);
            	if value == null then
            		value = random(min:1, max:1000);
            		session_set(key,value,exp:"+300s",db:"/hash/session.db");
            	else
            		n++;
            	endif
            endfor
            b=time();
            d = (b.secs - a.secs) * 1000000;
            d += (b.msecs - a.msecs) * 1000;
            d += (b.usecs - a.usecs);
            s = d / 1000000;
            tmp = s * 1000000;
            d = d - tmp;
            ms = d / 1000;
            tmp = ms * 1000;
            d = d - tmp;
            "<br>Laps pour 10000 clÃ©s avec: "; s; ":"; ms; ":"; d; ","; n;
*/
//test time session sans db           
/*            a=time();
        //??   session_exp(db:"/hash/session.db");
            key = random(min:1, max:1000, init:true, seed:1);
            value = session_get( key);
            n=0;
            for (i=1;i<10000;++i) do
            	key = random(min:1, max:1000);
            	value = session_get( key);
            	if value == null then
            		value = random(min:1, max:1000);
            		session_set(key,value,exp:"+300s");
            	else
            		n++;
            	endif
            endfor
            b=time();
            d = (b.secs - a.secs) * 1000000;
            d += (b.msecs - a.msecs) * 1000;
            d += (b.usecs - a.usecs);
            s = d / 1000000;
            tmp = s * 1000000;
            d = d - tmp;
            ms = d / 1000;
            tmp = ms * 1000;
            d = d - tmp;
            "<br>Laps pour 10000 clÃ©s sans db: "; s; ":"; ms; ":"; d; ","; n;
*/        
}}
         

\{{  endif   }}




\{{//TABLE SORTER
    if cgidata.test eq  true then }}
    <div>
        <script type="text/javascript" src="https://mottie.github.io/tablesorter/js/jquery.tablesorter.js"></script>
        
        <!--<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet"/>-->
        <link href="https://cdnjs.cloudflare.com/ajax/libs/datatables/1.10.12/css/dataTables.bootstrap.min.css" rel="stylesheet"/>
        <!--  <script type="text/javascript" src="/js/jquery.tablesorter.js"></script> -->
        
        
        <table  id="tblprojet"  class="tablesorter">
                <thead>
                    <tr>
                        <th>uid</th><th>title2</th><th>title3</th><th>title4</th>
                    </tr>
                </thead>
                <tbody>
                    {{for projet  sql("SELECT * FROM sr_project LIMIT 20") do       }}
                    <tr>
                      <td>{{projet.rows.uid}}</td><td>{{projet.rows.active}}</td></td><td>{{projet.rows.uid}}</td><td>{{projet.rows.uid}}</td>
                    </tr>   
                    {{endfor}}
                </tbody>
        </table>
        <div id="pager" class="pager">
    	<form>
    		<img src="../addons/pager/icons/first.png" class="first"/>
    		<img src="../addons/pager/icons/prev.png" class="prev"/>
    		<input type="text" class="pagedisplay"/>
    		<img src="../addons/pager/icons/next.png" class="next"/>
    		<img src="../addons/pager/icons/last.png" class="last"/>
    		<select class="pagesize">
    			<option selected="selected"  value="10">10</option>
    			<option value="20">20</option>
    			<option value="30">30</option>
    			<option  value="40">40</option>
    		</select>
    	</form>
    </div>



\{{endif}}

<form   type="get">
    <div  class="container">
        <div class="row">
            <label for="code">Code</label>
            <input name="code"></input>
            <button  type="submit"  value="true" name="test1"   >Code</button>
        </div>
    </div>

</form>


<script>
//  //   $(document).ready(function(){
//         //     $("#tblprojet").tablesorter();
//         //   $("#tblprojet").dataTable();
//         //     $('#tblprojet').dataTable( {
//         //       "jQueryUI": true
//         //     } );
//         $("table") 
//             .tablesorter({widthFixed: true, widgets: ['zebra']}) 
//             .tablesorterPager({container: $("#pager")});             
//              console.log('test');
//     });
</script>




