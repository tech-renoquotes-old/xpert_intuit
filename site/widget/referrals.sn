{{
    /*
        @title client_form
        Description: This widget is the form used to register a new client.
        
        @author madupuis@sednove.com
        
        @version 1.0 2016-07-11

    */
    
    %include "/extenso/functions/sn_ct.snc";
    %include "/extenso/functions/sn_pages.snc";
    %include "/site/package/all.sn";
    
}}

<!-- confirmation header -->
    \{{
        cgidata = cgidata(disable_upload:false, directory:destination);
        cookies = cookies(name:"source", value:cgidata.source, maxage:259200);
        cookie_data = unstringnify(cookies());
        
        //organize sn_uploads directory
        current_month = datetime(format:"%m");
        current_day = datetime(format:"%d");
        current_year = datetime(format:"%Y");
        
        destination = "/sn_uploads/projects/prj_" .+ current_year .+ "_" .+ current_month .+ "/";
        
        if !(-e destination) then
            mkdir(owner:"rwx",group:"rwx",other:"x",destination);
        endif
        
        if-e destination then
            a = stat(destination);
        else
            destination = "/sn_uploads";
        endif
        //finish organizing
        
        
        // include the validator for contractor_form
        %include "/site/client_form/include/validator_v2.sn";
        
        //organize sn_uploads directory
        current_month = datetime(format:"%m");
        current_day = datetime(format:"%d");
        current_year = datetime(format:"%Y");
        
        destination = "/sn_uploads/projects/prj_" .+ current_year .+ "_" .+ current_month .+ "/";
        
        if !(-e destination) then
            mkdir(owner:"rwx",group:"rwx",other:"x",destination);
        endif
        
        if-e destination then
            a = stat(destination);
        else
            destination = "/sn_uploads";
        endif
        //finish organizing
        
        cgidata = cgidata(disable_upload:false, directory:destination);  
        connection = connection();
    
        // validate server side
        if (validator.validate(data:cgidata) || cgidata.freeQuote eq 'yes') then
            // check if an email has been submitted for this client
            if(cgidata.email.length() <= 0) then
                client = insert(
                table:"sr_client",
                fields:{
                "firstname":cgidata.name,
                "address":cgidata.address,
                "lang":"{{lg.rows.lg}}",
                "languages": '3',
                "to_qualify": 'yes',
                'ip': connection.client_ip
                });
    
            else
            // Check for existing client in the database and merge it. 
                existing = sql(single:true, "SELECT * FROM sr_client WHERE email = '?'", cgidata.email);
                if (existing.nbrows > 0) then
                    client = existing.rows;
                    void update(tables: "sr_client", fields: {
                        'address': cgidata.address,
                        'to_qualify': 'yes',
                        'ip': connection.client_ip
                    }, uid: client.uid);
                
                else
                    client = insert(
                        table:"sr_client",
                        fields:{
                            "firstname":cgidata.name,
                            "email":cgidata.email,
                            "address":cgidata.address,
                            "lang":"{{lg.rows.lg}}",
                            "languages": '3',
                            "to_qualify": 'yes',
                            'ip': connection.client_ip
                        }
                    );
                endif
            endif
    
            address = insert(
                table:"sr_address",
                fields:{
                    "uid_client":client.uid,
                    "city":cgidata.locality,
                    "street_no":cgidata.street_number,
                    "street":cgidata.route,
                    "zip":cgidata.postal_code,
                    "province":cgidata.administrative_area_level_1,
                    "country":cgidata.country,
                    "phone1": cgidata.phone
                }
            );
    
            //Cherche les adwors dans les cookies
            cookies = cookies();
            cookie_data = unstringnify(cookies.soumissionrenovation);
            
            adwords = parse_query_string(cookie_data.adwords); 
            first_page_visited = cookie_data.url;
            first_visited = cookies.first_visited;// not necessarely with adword
            
            void insert(table:'sr_debug', fields:{'description':'test_cre  photo arg','text':request.args});
    
            configs = sql(single:true, "SELECT * FROM sn_configs WHERE uid = 1 LIMIT 1");
            
            site= (lg.rows.lg  eq 'en')?'https://renoquotes.com':'https://soumissionrenovation.ca';
            
            //v1.02
            description = cgidata.description;
            description = html2text(description);//empÃªche script de passer
            
            best_way_to_contact = cgidata.best_reach .+ " " .+ cgidata.moment;
    
                project = insert(
                    table:"sr_project",
                    fields:{
                        "uid_client":client.uid, 
                        "description":description,
                        "file1": (cgidata.file1.sn_fullname ne '') ? site.+cgidata.file1.sn_fullname : '' ,
                        "link1": '<a href="'.+site.+cgidata.file1.sn_fullname.+'"  target="_blank">'.+cgidata.file1.sn_fullname.+'</a>',
                        "file2": (cgidata.file2.sn_fullname ne '') ? site.+cgidata.file2.sn_fullname : '' ,
                        "link2": '<a href="'.+site.+cgidata.file2.sn_fullname.+'"  target="_blank">'.+cgidata.file2.sn_fullname.+'</a>',
                        "file3": (cgidata.file3.sn_fullname ne '') ? site.+cgidata.file3.sn_fullname : '' ,
                        "link3": '<a href="'.+site.+cgidata.file3.sn_fullname.+'"  target="_blank">'.+cgidata.file3.sn_fullname.+'</a>',
                        "file4": (cgidata.file4.sn_fullname ne '') ? site.+cgidata.file4.sn_fullname : '' ,
                        "link4": '<a href="'.+site.+cgidata.file4.sn_fullname.+'"  target="_blank">'.+cgidata.file4.sn_fullname.+'</a>',
                        "file5": (cgidata.file5.sn_fullname ne '') ? site.+cgidata.file5.sn_fullname : '' ,
                        "link5": '<a href="'.+site.+cgidata.file5.sn_fullname.+'"  target="_blank">'.+cgidata.file5.sn_fullname.+'</a>',
                        "uid_address":address.uid,
                        "max_quotes": configs.rows.number_of_quotes,
                        "status": "new",
                        "adwords_pos": adwords.pos,
                        "adwords_net": adwords.net,
                        "adwords_ad": adwords.ad,
                        "adwords_kw": adwords.kw,
                        "adwords_url": first_page_visited,
                        "adwords_region": adwords.region,
                        "adwords_adgroup": adwords.adgroupid,
                        "adwords_campaign": cgidata.source,
                        "adwords_cre": adwords.cre,
                        "due_date": "Flexible",
                        "first_url": first_visited,
                        'additional_comments': cgidata.comments,
                        'property_type': cgidata.house_type,
                        'budget': cgidata.budget,
                        'estimate_duration': cgidata.duration,
                        'best_contact_way': best_way_to_contact,
                        'is_owner': cgidata.is_owner,
                        "ip": connection.client_ip
                    }
                );
                
            if(cgidata.freeQuote eq 'yes') then
                project::connectFreeProjectContractor(project.uid, cgidata.cuid);
                if(cgidata.more_quotes ne "on") then
                    void update(tables:'sr_project', fields: {
                        'status': 'free'
                    }, uid: project.uid);
                else
                    automail::quoteRequestToClient(project.uid);
                    automail::quoteRequestToAdmin(project.uid);
                endif
            else
                automail::quoteRequestToClient(project.uid);
                automail::quoteRequestToAdmin(project.uid);
            endif   
    
            void insert(table:'sr_debug', fields:{'description':'Client confirmation uid='.+' ','text':project.uid.+ '  first_url='.+first_visited});
            
            success_project = 1;
            
        endif
        
    }}
    
    \{{if (success_project == 1) then}}
    <div id="ajax_success" class="alert alert-success">
        \{{"Project sent.  Project id: ";project.uid;" for: ";description;}}
        <a href="javascript:$('#ajax_result').hide();" class="close">&times;</a> 
    </div>
    \{{endif}}

<!--Reporting-->
\{{

    if cgidata.source then
        }}
        <style>
            #contractors {
                font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
                border-collapse: collapse;
                width: 100%;
            }
            
            #contractors td, #customers th {
                border: 1px solid #ddd;
                padding: 8px;
            }
            
            #contractors tr:nth-child(even){background-color: #f2f2f2;}
            
            #contractors tr:hover {background-color: #ddd;}
            
            #contractors tr:nth-last-child(-n+1){
                background-color: #00517e;
                color: white;
            }
            
            #contractors th {
                padding-top: 12px;
                padding-bottom: 12px;
                text-align: center;
                background-color: #00517e;
                color: white;
            }
        </style>
        \{{

        if cgidata.report eq "yes" then
            if cgidata.limit then
                projects_referred = sql("(SELECT concat(ifnull(c.firstname, ''), ' ', ifnull(c.lastname, ''), ' ', ifnull(a.phone1, '')) as contact, p.uid, p.active_date, p.description, sum(if(pc.accepted = 'yes', pc.lead_price, 0)) as total_sold, sum(if(pc.accepted = 'yes',1,0)) as contractors, sum(if(cr.accepted = 'yes', pc.lead_price, 0)) as credit, p.status
                FROM sr_project p
                LEFT JOIN sr_project_contractor pc ON pc.uid_project = p.uid 
                LEFT JOIN sr_credit cr ON cr.uid_project_contractor = pc.uid
                LEFT JOIN sr_client c ON c.uid = p.uid_client
                LEFT JOIN sr_address a ON a.uid = p.uid_address
                WHERE p.adwords_campaign = '?'
                AND p.status <> 'cancelled-before-qualification'
                GROUP BY p.uid
                ORDER BY active_date is null DESC, active_date = '0000-00-00 00:00:00' DESC, active_date DESC
                LIMIT ?)
                UNION
                    (SELECT 'Total' as uid, '-' as active_date, '-' as contact, '-' as description, sum(if(pc.accepted = 'yes', pc.lead_price, 0)) as total_sold, '-' as contractors, sum(if(cr.accepted = 'yes', pc.lead_price, 0)) as credit, '-' as status
                    FROM sr_project p
                    LEFT JOIN sr_project_contractor pc ON pc.uid_project = p.uid 
                    LEFT JOIN sr_credit cr ON cr.uid_project_contractor = pc.uid
                    WHERE p.adwords_campaign = '?')
                ORDER BY active_date is null DESC, active_date = '0000-00-00 00:00:00' DESC, active_date DESC
                ", cgidata.source, cgidata.limit, cgidata.source);
            else
                projects_referred = sql("(SELECT concat(ifnull(c.firstname, ''), ' ', ifnull(c.lastname, ''), ' ', ifnull(a.phone1, '')) as contact, p.uid, p.active_date, p.description, sum(if(pc.accepted = 'yes', pc.lead_price, 0)) as total_sold, sum(if(pc.accepted = 'yes',1,0)) as contractors, sum(if(cr.accepted = 'yes', pc.lead_price, 0)) as credit, p.status
                FROM sr_project p
                LEFT JOIN sr_project_contractor pc ON pc.uid_project = p.uid 
                LEFT JOIN sr_credit cr ON cr.uid_project_contractor = pc.uid
                LEFT JOIN sr_client c ON c.uid = p.uid_client
                LEFT JOIN sr_address a ON a.uid = p.uid_address
                WHERE p.adwords_campaign = '?'
                AND p.status <> 'cancelled-before-qualification'
                GROUP BY p.uid
                ORDER BY active_date is null DESC, active_date = '0000-00-00 00:00:00' DESC, active_date DESC
                LIMIT 100)
                UNION
                    (SELECT 'Total' as uid, '-' as active_date, '-' as contact, '-' as description, sum(if(pc.accepted = 'yes', pc.lead_price, 0)) as total_sold, '-' as contractors, sum(if(cr.accepted = 'yes', pc.lead_price, 0)) as credit, '-' as status
                    FROM sr_project p
                    LEFT JOIN sr_project_contractor pc ON pc.uid_project = p.uid 
                    LEFT JOIN sr_credit cr ON cr.uid_project_contractor = pc.uid
                    WHERE p.adwords_campaign = '?')
                ORDER BY active_date is null DESC, active_date = '0000-00-00 00:00:00' DESC, active_date DESC
                ", cgidata.source, cgidata.source);
            endif
            payouts = sql("
                SELECT date(p.sn_cdate) as sn_cdate, p.amount
                FROM sr_affiliate_payouts p
                INNER JOIN sr_affiliate a ON a.uid = p.uid_affiliate
                WHERE a.source = '?'
                ORDER BY p.sn_cdate DESC
                ", cgidata.source);
            }}
            
            <table id="contractors">
                <th style="width:10%">{{sn_ct("Project ID")}}</th>
                <th style="width:10%">{{sn_ct("Activation date")}}</th>
                <th style="width:10%">Contact</th>
                <th style="width:40%">Description</th>
                <th style="width:10%">{{sn_ct("# of contractors")}}</th>
                <th style="width:10%">{{sn_ct("Total sold")}}</th>
                <th style="width:10%">{{sn_ct("Total credits")}}</th>
                <th style="width:10%">{{sn_ct("Total revenu")}}</th>
    
                \{{
                for p in projects_referred.rows do
                total = p.total_sold - p.credit;
                }}
                    <tr>
                        <td>
                            \{{p.uid}}
                        </td>
                        <td>
                            \{{p.active_date}}
                        </td>
                        <td>
                            \{{p.contact}}
                        </td>
                        <td>
                            \{{if p.status eq 'new' then}}
                                <textarea style="width:100%;" id="\{{p.uid}}" onchange="save_ajax(this, \{{p.uid}})">\{{p.description}}</textarea>
                            \{{else
                                p.description;
                            endif}}
                        </td>
                        <td>
                            \{{p.contractors}}
                        </td>
                        <td>
                            \{{money_format(p.total_sold)}}
                        </td>
                        <td>
                            \{{money_format(p.credit)}}
                        </td>
                        <td>
                            \{{money_format(total)}}
                        </td>
                    </tr>
                \{{endfor
                "<tr>";
                "<td>{{sn_ct(edit:false, 'Votre commission')}} (50%)</td>";
                "<td>-</td>";
                "<td>-</td>";
                "<td>-</td>";
                "<td>-</td>";
                "<td>-</td>";
                "<td>-</td>";
                "<td>" .+ money_format(round(total*100/2)/100) .+ "</td>";
                "</tr>";
                total = total/2;
                for p in payouts.rows do
                total = total - p.amount;
                }}
                <tr>
                    <td>{{sn_ct("Commissions payÃ©es le")}}</td>
                    <td>\{{p.sn_cdate}}</td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>\{{money_format(p.amount)}}</td>
                </tr>
                \{{endfor}}
                <tr>
                    <td>{{sn_ct("Commissions dÃ»es")}}</td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>\{{money_format(fmax(total,0))}}</td>
                </tr>
            </table>
        \{{
        endif
        
        if cgidata.report eq 'summary' then
            if cgidata.month then
                if cgidata.year then
                report = sql("
                    SELECT t.region, s.name_long_? as service, q.count as count, sum(pc.lead_price) as sales
                    FROM sr_project_contractor pc
                    INNER JOIN sr_project p ON p.uid = pc.uid_project
                    INNER JOIN sr_address a ON a.uid = p.uid_address
                    INNER JOIN sr_city c ON c.uid = a.uid_city
                    INNER JOIN sr_territory t ON t.uid = c.uid_territory
                    INNER JOIN sr_service s ON s.uid = p.uid_service
                    INNER JOIN (
                        SELECT count(*) as count, t.region, s.service
                        FROM sr_project p
                        INNER JOIN sr_address a ON a.uid = p.uid_address
                        INNER JOIN sr_city c ON c.uid = a.uid_city
                        INNER JOIN sr_territory t ON t.uid = c.uid_territory
                        INNER JOIN sr_service s ON s.uid = p.uid_service
                        WHERE p.adwords_campaign = '?'
                        AND month(p.active_date) = '?'
                        AND year(p.active_date) = '?'
                        GROUP BY t.region, s.service
                        ) as q ON q.region = t.region AND q.service = s.service
                    WHERE p.adwords_campaign = '?'
                    AND p.status <> 'new'
                    AND p.status <> 'cancelled-before-qualification'
                    AND month(p.active_date) = '?'
                    AND year(p.active_date) = '?'
                    GROUP BY t.region, s.service
                    ORDER BY t.region, service
                    ", "{{lg.rows.lg}}", cgidata.source, cgidata.month, cgidata.year, cgidata.source, cgidata.month, cgidata.year);
                endif
            else
                report = sql("
                    SELECT t.region, s.name_long_? as service, q.count as count, sum(pc.lead_price) as sales
                    FROM sr_project_contractor pc
                    INNER JOIN sr_project p ON p.uid = pc.uid_project
                    INNER JOIN sr_address a ON a.uid = p.uid_address
                    INNER JOIN sr_city c ON c.uid = a.uid_city
                    INNER JOIN sr_territory t ON t.uid = c.uid_territory
                    INNER JOIN sr_service s ON s.uid = p.uid_service
                    INNER JOIN (
                        SELECT count(*) as count, t.region, s.service
                        FROM sr_project p
                        INNER JOIN sr_address a ON a.uid = p.uid_address
                        INNER JOIN sr_city c ON c.uid = a.uid_city
                        INNER JOIN sr_territory t ON t.uid = c.uid_territory
                        INNER JOIN sr_service s ON s.uid = p.uid_service
                        WHERE p.adwords_campaign = '?'
                        GROUP BY t.region, s.service
                        ) as q ON q.region = t.region AND q.service = s.service
                    WHERE p.adwords_campaign = '?'
                    AND p.status <> 'new'
                    AND p.status <> 'cancelled-before-qualification'
                    GROUP BY t.region, s.service
                    ORDER BY t.region, service
                    ", "{{lg.rows.lg}}", cgidata.source, cgidata.source);
            endif
            }}
            <table id="contractors">
                <th>{{sn_ct("RÃ©gion")}}</th>
                <th>Service</th>
                <th>{{sn_ct("# de projet")}}</th>
                <th>{{sn_ct("Ventes")}}</th>
                <th>{{sn_ct("$ par projet")}}</th>
                \{{
                count = 0;
                sales = 0;
                for r in report.rows do
                count = count + r.count;
                sales = sales + r.sales;
                }}
                    <tr>
                        <td>\{{r.region}}</td>
                        <td>\{{r.service}}</td>
                        <td>\{{r.count}}</td>
                        <td>\{{r.sales}}</td>
                        <td>\{{money_format(round(r.sales/r.count*100)/100)}}</td>
                    </tr>
                \{{endfor}}
                <tr>
                    <td>Total</td>
                    <td>-</td>
                    <td>\{{count}}</td>
                    <td>\{{sales}}</td>
                    <td>\{{money_format(round(sales/fmax(count,1)*100)/100)}}</td>
                </tr>
            </table>
        \{{
            endif
    }}
    
    <style>
        #upload_files>div{
            position:relative;
        }
        #upload_files > div > input {
            margin:3px 0px;
        }
        #upload_files > div > a {
            display:block;
            cursor: pointer;
            position:absolute;
            right:0;
            top:50%;
            margin-top:-10px;
        }
        #upload_files > div > a > i:before {
            content: "\f1f8"; /* fa-trash */
        }
        #upload_files > div:first-child > a > i:before {
            content: "\f067"; /* fa-plus */
        }
        [data-validator-error]{
            color:red;
            font-weight:bold;
        }
        
    
    .center
    {
        width: auto;
    }
    
    
    .center img
    {
        height: 50px;
        width: 50px;
    }
    
    
    .validemail{
        color: #f4aa42;
        font-size:12px;
        font-weight:bold;
    }
    </style>
    \{{
        use page;
        cookies = cookies();
        
        if cookies.soumissionrenovation == undefined then
            if (request.args) then     // test si contient cre
               // if strpos(request.args,"cre") >= 0 then 
                	date = datetime();
                	adwords = request.args;
                	adwords.campaignid = cgidata.source;
                	cookie = { 'url' : request.hostname .+ request.uri, 'adwords' : adwords, 'date' : date };
                	expirytime=datetime(extended:true,op:"+3h",format:"%Sednove2");
                	cookies(name:"soumissionrenovation",value:cookie,path:"/",expiry:expirytime);
                //endif
            endif
        endif
    }}
    <div class="well custom-well">
        <form class="form-horizontal" enctype="multipart/form-data" action="" id="add_client" name="add_client" method="POST">
            <fieldset class="form-group">
                <label for="name" class="control-label col-md-4">
                    {{sn_ct("client_form Votre nom", publish:"/extenso/publish/sn_widgets.sn", uids:widget.rows.uid)}}*
                </label>
                <div class="col-md-8">
                    <input class="form-control" type="text" name="name" id="name" value="">
                    <span class="help-block LoNotSensitive" data-validator-msg="{{sn_ct(edit:false,'Invalid name')}}" data-validator-error="name"></span>
                </div>
            </fieldset>
            
            <fieldset class="form-group">
                <label for="phone" class="control-label col-md-4">
                    {{sn_ct("client_form Votre tÃ©lÃ©phone", publish:"/extenso/publish/sn_widgets.sn", uids:widget.rows.uid)}}*
                </label>
                <div class="col-md-8">
                    <input class="form-control" type="text" name="phone" id="phone" value="">
                    <span class="help-block LoNotSensitive" data-validator-msg="{{sn_ct(edit:false,'Invalid phone')}}" data-validator-error="phone"></span>
                </div>
            </fieldset>
            
            <fieldset class="form-group">
                <label class="control-label col-md-4" for="email">
                    {{sn_ct("client_form Votre courriel", publish:"/extenso/publish/sn_widgets.sn", uids:widget.rows.uid)}}*
                </label>
                <div class="col-md-8">
                    <input class="form-control" type="text" name="email" id="email" onfocusout="validate_email()" value="">
                    <span class="help-block LoNotSensitive" data-validator-msg="{{sn_ct(edit:false,'Invalid email')}}" data-validator-error="email"></span>
                    <span style="display:none" class="validemail" name="validemail" >{{sn_ct(edit:false,"Attention: la validation du courriel a Ã©chouÃ©e. Si c'est le bon courriel, je vous prie d'ignorer ce message.")}}</span>
                </div>
            </fieldset>
            <fieldset class="form-group">
                <label for="address" class="control-label col-md-4">
                    {{sn_ct("client_form Votre adresse", publish:"/extenso/publish/sn_widgets.sn", uids:widget.rows.uid)}}*
                </label>
                <div class="col-md-8">
                    <input class="form-control LoNotSensitive" type="text" name="address" id="address" value="" onFocus="geolocate()" placeholder="">
                    <input type="hidden" class="field" id="street_number" name="street_number" disabled="true"></input>
                    <input type="hidden" class="field" id="route" name="route" disabled="true"></input>
                    <input type="hidden" class="field" id="locality" name="locality" disabled="true"></input>
                    <input type="hidden" class="field" id="administrative_area_level_1" name="administrative_area_level_1" disabled="true"></input>
                    <input type="hidden" class="field" id="postal_code" name="postal_code" disabled="true"></input>
                    <input type="hidden" class="field" id="country" name="country" disabled="true"></input>
                    <span class="help-block" data-validator-msg="{{sn_ct(edit:false,'Invalid address')}}" data-validator-error="address"></span>
                </div>
                    
            </fieldset>
            
            <fieldset class="form-group">
                <label for="description" class="control-label col-md-4"
                    {{sn_ct("client_form Votre projet", publish:"/extenso/publish/sn_widgets.sn", uids:widget.rows.uid)}}*
                </label>
                <div class="col-md-8">
                    <textarea class="form-control LoNotSensitive" name="description" placeholder='{{sn_ct(edit:false,"client_form ex. : Description des travaux Ã  faire dans vos mots, dÃ©lai de rÃ©alisation, budget, etc.", publish:"/extenso/publish/sn_widgets.sn", uids:widget.rows.uid)}}' rows="5"></textarea>    
                    <span class="help-block" data-validator-msg="{{sn_ct(edit:false,'Invalid description')}}" data-validator-error="description"></span>
                </div>
            </fieldset>
            
                        <!--<fieldset class="form-group">-->
                        <!--    <label for="budget" class="control-label col-md-4">-->
                        <!--        {{sn_ct("Votre budget?", publish:"/extenso/publish/sn_widgets.sn", uids:widget.rows.uid)}}-->
                        <!--    </label>-->
                        <!--    <div class="col-md-8">-->
                        <!--        <input class="form-control" placeholder="{{sn_ct(edit:false,'En CAN : ex. 250.45')}}" type="text" name="budget" id="budget" value="">-->
                        <!--    </div>-->
                        <!--</fieldset>-->
                        
                        <fieldset class="form-group">
                            <label for="duration" class="control-label col-md-4">
                                {{sn_ct("Delai d'execution des travaux?", publish:"/extenso/publish/sn_widgets.sn", uids:widget.rows.uid)}}
                            </label>
                            <div class="col-md-8">
                                <select class="form-control LoNotSensitive" name="duration" id="duration" value="">
                                    <option selected value=''>{{sn_ct(edit:true,'Choisissez une option')}}</option>
                                    <option>{{sn_ct(edit:true,"DÃ¨s que possible (urgent)")}}</option>
                                    <option>{{sn_ct(edit:true,"Moins d'une semaine")}}</option>
                                    <option>{{sn_ct(edit:true,'Une Ã  deux semaines')}}</option>
                                    <option>{{sn_ct(edit:true,'3 Ã  4 semaines')}}</option>
                                    <option>{{sn_ct(edit:true,'1 Ã  2 mois')}}</option>
                                    <option>{{sn_ct(edit:true,'3 Ã  4 mois')}}</option>
                                    <option>{{sn_ct(edit:true,'6 Ã  12 mois')}}</option>
                                    <option>{{sn_ct(edit:true,'12 mois et plus')}}</option>
                                </select>
                            </div>
                        </fieldset>
                        
                        <!--<fieldset class="form-group">-->
                        <!--    <label class="control-label col-md-4" for="house_type">-->
                        <!--        {{sn_ct("Type de propriÃ©tÃ©", publish:"/extenso/publish/sn_widgets.sn", uids:widget.rows.uid)}}-->
                        <!--    </label>-->
                        <!--    <div class="col-md-8">-->
                        <!--        <select class="form-control LoNotSensitive" name="house_type" id="house_type" value="">-->
                        <!--            <option selected value='' >{{sn_ct(edit:true,'Choisissez une option')}}</option>-->
                        <!--            <option>{{sn_ct(edit:true,'Cottage')}}</option>-->
                        <!--            <option>{{sn_ct(edit:true,'Bungalow')}}</option>-->
                        <!--            <option>{{sn_ct(edit:true,'Semi-dÃ©tachÃ©')}}</option>-->
                        <!--            <option>{{sn_ct(edit:true,'Maison de ville')}}</option>-->
                        <!--            <option>{{sn_ct(edit:true,'Condo')}}</option>-->
                        <!--            <option>{{sn_ct(edit:true,'Apartement')}}</option>-->
                        <!--            <option>{{sn_ct(edit:true,'Chalet')}}</option>-->
                        <!--            <option>{{sn_ct(edit:true,'Commerciale')}}</option>-->
                        <!--            <option>{{sn_ct(edit:true,'Multi-Plex (6 logements et moins)')}}</option>-->
                        <!--            <option>{{sn_ct(edit:true,'Multi-Plex (Plus de 6 logements)')}}</option>-->
                        <!--            <option>{{sn_ct(edit:true,'Autre')}}</option>-->
                        <!--        </select>-->
                        <!--    </div>-->
                        <!--</fieldset>-->
                        
                        <fieldset class="form-group">
                            <label class="control-label col-md-4" for="is_owner">
                                {{sn_ct("Ãtes-vous propriÃ©taire?", publish:"/extenso/publish/sn_widgets.sn", uids:widget.rows.uid)}}
                            </label>
                            <div class="col-md-8">
                                <select class="form-control LoNotSensitive" name="is_owner" id="is_owner" value="">
                                    <option selected value='' >{{sn_ct(edit:true,'Choisissez une option')}}</option>
                                    <option>{{sn_ct(edit:true,'PropriÃ©taire')}}</option>
                                    <option>{{sn_ct(edit:true,'Locataire')}}</option>
                                    <option>{{sn_ct(edit:true,'En processus d\'achat (Offre d\'achat acceptÃ©e)')}}</option>
                                    <option>{{sn_ct(edit:true,'En processus d\'achat (Aucune offre d\'achat acceptÃ©e)')}}</option>
                                    <option>{{sn_ct(edit:true,'Condo')}}</option>
                                    <option>{{sn_ct(edit:true,'Je suis entrepreneur et je cherche un sous-contractant')}}</option>
                                    <option>{{sn_ct(edit:true,'Autre')}}</option>
                                </select>
                            </div>
                        </fieldset>
                        
                        <fieldset class="form-group">
                            <label class="control-label col-md-4" for="best_reach">
                                {{sn_ct("Meilleur moyen pour vous joindre", publish:"/extenso/publish/sn_widgets.sn", uids:widget.rows.uid)}}
                            </label>
                            <div class="col-md-8">
                                <table>
                                    <tr>
                                        <td width="50%">
                                        <select class="form-control LoNotSensitive" name="best_reach" id="best_reach" value="">
                                            <option selected value=''>{{sn_ct(edit:true,'Choisissez une option')}}</option>
                                            <option>{{sn_ct(edit:true,'Par tÃ©lÃ©phone')}}</option>
                                            <option>{{sn_ct(edit:true,'Par email')}}</option>
                                            <option>{{sn_ct(edit:true,'Par sms/texto')}}</option>
                                            <option>{{sn_ct(edit:true,'Autre')}}</option>
                                            </select>
                                        </td>
                                        <td width="50%">
                                        <select class="form-control LoNotSensitive" name="moment" id="moment" value="">
                                            <option selected value=''>{{sn_ct(edit:true,'Choisissez une option')}}</option>
                                            <option>{{sn_ct(edit:true,'En tout temps')}}</option>
                                            <option>{{sn_ct(edit:true,'Matin')}}</option>
                                            <option>{{sn_ct(edit:true,'Mi-journÃ©e')}}</option>
                                            <option>{{sn_ct(edit:true,'Le jour')}}</option>
                                            <option>{{sn_ct(edit:true,'Soir')}}</option>
                                        </select>
                                        </td>
                                    </tr>
                                    
                                </table>
                            </div>
                        </fieldset>
                        
                        <fieldset class="form-group">
                            <label for="comm" class="control-label col-md-4">
                                {{sn_ct("Langue de communication", publish:"/extenso/publish/sn_widgets.sn", uids:widget.rows.uid)}}
                            </label>
                            <div class="col-md-8">
                                <select class="form-control" name="comm" id="comm" value="">
                                    <option selected value=''>{{sn_ct(edit:true,'Choisissez une option')}}</option>
                                    <option value='1'>{{sn_ct(edit:true,'french')}}</option>
                                    <option value='2'>{{sn_ct(edit:true,'english')}}</option>
                                    <option value='3'>{{sn_ct(edit:true,'both')}}</option>
                                </select>
                            </div>
                        </fieldset>
            
                        <fieldset class="form-group">
                            <label for="comments" class="control-label col-md-4">
                                {{sn_ct("commentaire additionnel", publish:"/extenso/publish/sn_widgets.sn", uids:widget.rows.uid)}}
                            </label>
                            <div class="col-md-8">
                                <textarea class="form-control LoNotSensitive" name="comments" id="comments"></textarea>    
                            </div>
                        </fieldset>
        
            <fieldset class="form-group">
                <label class="control-label col-md-4 LoNotSensitive">{{sn_ct("client_form Joindre un fichier", publish:"/extenso/publish/sn_widgets.sn", uids:widget.rows.uid)}}</label>
                <div class="col-md-8" style="margin-top:3px;">
                    <div id="upload_files"></div>
                </div>
            </fieldset>
            
            <input name="url" type="hidden" value="\{{cgidata.source}}">
    
            <div class="form-group">
                <div class="col-md-offset-4 col-md-8">
                    <button id="submit_add_client" type="submit" class="btn btn-primary">
                        {{sn_ct(edit:false,"client_form Soumettre", publish:"/extenso/publish/sn_widgets.sn", uids:widget.rows.uid)}}
                    </button>
                    <input type='hidden' name='emailChk' id='emailChk'/>
                </div>
            </div>
    
    
            <script>
                function addUploadFile() {
                    return $('<div><input type="file" name="file"><a><i class="fa"></i></a></div>').prependTo('#upload_files');
                }
                
                $('#upload_files').on('click', "div:not(:first-child) > a", function(){
                    $(this).parent().remove();
                    $('#upload_files > span').remove();
                });
                $('#upload_files').on('click', "div:first-child > a", function(){
                    addUploadFile();
                    if ($('#upload_files').find('div > input').length >= 5) {
                        $('#upload_files').prepend('<span>');
                    }
                });
                addUploadFile();
            </script>
        </form>
    </div>
    
    \{{
        // include the validator for contractor_form
        %include "/site/client_form/include/validator.sn";
        validator.startAntibot();
        // validate client side
        validator.validateJS(form:'add_client');
    }}
    
    <script>
    $(document).ready(function(){
       
       
       if($("#phone").val().length < 10){
           
        }
    
        $('#email').on('input',function(e) {
            $(this).val($.trim($(this).val()));
        });
        
        $('#email').on('input',function(e) {
            $(this).val($.trim($(this).val()));
        });
        
        $('#email').keypress(function(e) {
            if(e.which === 32) 
                return false;
        });
        
        
        $('#email').on('input',function(e) {
               $('.validemail').hide();
        });   
    
    })
    </script>
    
    
    <script>
    function validate_email(){
        if( isValidEmailAddress($('#email').val())){
            if($('#emailChk').val() != $('#email').val()){
                $.ajax({
                    type: "POST",
                    url: "{{sn_pages('ajax_verify_email', lg.rows.lg, table:'ressources')}}",
                    data: {'neverbounce':$('#email').val()},
                    beforeSend: function(){
                        if ($('#email').val() == ""){
                            return false;
                        }
                        
                        $(".center").show();
                    },
            
                    success: function(data, statusText, xhr){
                        $('#emailChk').val($('#email').val());
                        
                        if(xhr.getResponseHeader('X-response') == 0){
                            $(".center").hide();
                            $('.validemail').hide();
                            $('.address').focus();
                        }else if(xhr.getResponseHeader('X-response') == 1){
                            $(".center").hide();
                            $('.validemail').show();
                            $('.address').focus();
                        }else{
                            
                        }
                    },
                    
                    complete: function(data, statusText, xhr) {
                        $(".center").hide();
                    }
                });
            }
        }
    }
    
    
    function isValidEmailAddress(emailAddress) {
        var pattern = /^([a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+(\.[a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)*|"((([ \t]*\r\n)?[ \t]+)?([\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*(([ \t]*\r\n)?[ \t]+)?")@(([a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.)+([a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.?$/i;
        return pattern.test(emailAddress);
    };
    </script>
    
    
    <script>
        // separate files 
        $('form[name=add_client]').submit(function(e){
            var file_nb = 0;
            
            // if($('#emailChk').val() != $('#email').val()){
            //     e.preventDefault();
            //     $(".center").show();
            // }
            
            $('#upload_files').find('div > input').each(function(){
                file_nb++;
                $(this).attr("name", $(this).attr("name") + file_nb);
            });
        });
    </script>
    
    
    
    
    
    
    <!-- Google map api for addresses -->
    <script>
    // This example displays an address form, using the autocomplete feature
    // of the Google Places API to help users fill in the information.
    
    var placeSearch, autocomplete, autocomplete_slim;
    var componentForm = {
      street_number: 'short_name',
      route: 'long_name',
      locality: 'long_name',
      administrative_area_level_1: 'short_name',
      country: 'long_name',
      postal_code: 'short_name'
    };
    
    function initAutocomplete() {
      // Create the autocomplete object, restricting the search to geographical
      // location types.
      autocomplete = new google.maps.places.Autocomplete(
          /** @type {!HTMLInputElement} */(document.getElementById('address')),
          {types: ['geocode']});
          
      // When the user selects an address from the dropdown, populate the address
      // fields in the form.
      autocomplete.addListener('place_changed', fillInAddress);
      autocomplete.name="normal";
    
    
      // For the second form in the article_detail page (slim)
      if (document.getElementById('address_slim')){
          autocomplete_slim = new google.maps.places.Autocomplete(
              /** @type {!HTMLInputElement} */(document.getElementById('address_slim')),
              {types: ['geocode']});
          autocomplete_slim.addListener('place_changed', fillInAddress);
          autocomplete_slim.name="slim";
        }
    }
    
    // [START region_fillform]
    function fillInAddress() {
      // Get the place details from the autocomplete object.
      var place = this.getPlace();
      index = (this.name === "normal") ? 0 : 1 ;
        
      for (var component in componentForm) {
        document.getElementsByName(component)[index].value = '';
        document.getElementsByName(component)[index].disabled = false;
      }
    
      // Get each component of the address from the place details
      // and fill the corresponding field on the form.
      for (var i = 0; i < place.address_components.length; i++) {
        var addressType = place.address_components[i].types[0];
        if (componentForm[addressType]) {
          var val = place.address_components[i][componentForm[addressType]];
          document.getElementsByName(addressType)[index].value = val;
        }
      }
    }
    // [END region_fillform]
    
    // [START region_geolocation]
    // Bias the autocomplete object to the user's geographical location,
    // as supplied by the browser's 'navigator.geolocation' object.
        function geolocate() {
          if (navigator.geolocation) {
        //     navigator.geolocation.getCurrentPosition(function(position) {
        //       var geolocation = {
        //         lat: position.coords.latitude,
        //         lng: position.coords.longitude
        //       };
        //       var circle = new google.maps.Circle({
        //         center: geolocation,
        //         radius: position.coords.accuracy
        //       });
        //      autocomplete.setBounds(circle.getBounds());
        //     });
           }
        }
    // [END region_geolocation] 
    
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?signed_in=true&libraries=places&callback=initAutocomplete&key=AIzaSyD7PI5ZfU6ZnTr0iwxYKpdb7kTDNiHw1e8"async defer></script>
    
    <script src="https://leaverou.github.io/stretchy/stretchy.min.js" async></script>
    
    <script>
    function save_ajax(e, uid) {
        var value = e.value;
        $.ajax({
            type: "post",
            data:{
                "save_ajax": 1,
                "value": value,
                "uid": uid
            },
            url: "{{ sn_pages('ajax_save_ajax_references', lg.rows.lg, table:'ressources')}}",
            success:function(data, statusText, xhr){
                $('<img id="checkmark-' +e.id + '" height="24px" style="position:absolute; display:inline-block; z-index:10;" src="/sn_uploads/check-512.png">').insertAfter('#' + e.id);
                sleep(2000).then(() => {
                    $('#checkmark-' + e.id).remove();
                });
                
            }
        });
    }
    
    function sleep(ms) {
      return new Promise(resolve => setTimeout(resolve, ms));
    }
    </script>
    
    \{{endif}}
