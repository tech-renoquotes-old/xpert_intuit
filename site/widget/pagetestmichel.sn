

{{
    %include "/extenso/functions/sn_ct.snc";
    %include "/extenso/functions/sn_pages.snc";

   //session 
    %include "/extenso/functions/sessions.snc"; 
    
    use page;
    use lg;

    %include "/site/package/all.sn";     //Pour publication des Widget et Automail
    void timeout(15);
    
}}

\{{
    cgidata = cgidata();
    
}}
Recréer facture<br>
<form action="" method="post">
    <input type="text" name="uid_pivotal" placeholder="uid_pivotal"><br>
    Recréer?<input type="checkbox" name="real">
    <input type="submit">
</form>

Connaître qui sont les prochains à recevoir le projet
<form action="" method="post">
    <input type="text" name="uid_project" placeholder="uid_project"><br>
    <input type="submit">
</form>

<br><br>

Supprimer page profil
<form action="" method="post">
    <input type="text" name="remove_url" placeholder="url (seulement prendre la partie après 'https://xpertsource.com/expert/')" style="width:800px;"><br>
    <input type="submit">
</form>
\{{
    
    if cgidata.remove_url ne "" then
        remove("/html/expert/" .+ cgidata.remove_url .+ ".snc");
        remove("/staging/expert/" .+ cgidata.remove_url .+ ".snc");
        remove("/tmp/-html-expert-" .+ cgidata.remove_url .+ ".snc");
        remove("/tmp/-staging-expert-" .+ cgidata.remove_url .+ ".snc");
    endif

    if cgidata.uid_pivotal ne "" then
        if cgidata.real eq "on" then
            real = 'yes';
        endif
        contractor::recreate_transaction(cgidata.uid_pivotal, 'deb@xpertsource.com', real);
    endif
    
    if cgidata.uid_project ne "" then
        new_limit = project::set_limit_new_contractors_to_contact(cgidata.uid_project, 5);
        test = project::findContractorsForProject_v3(cgidata.uid_project, new_limit);
        "<br><br>";
        "La requête: " .+ test.sql;
        "<br>";
        for t in test.rows do
            "<br>";
            "uid: " .+ t.uid;
        endfor
    endif
//     uid_project = 6607
// 	;
    
//     limit = 5;

    // test = "5598280151129017";
    
    // substr(test, -4)
    
    // contractor::recreate_transaction(4391, 'mjodoin@soumissionrenovation.ca', 'no');

// test = project::findContractorsForProject_v3(7026, 5);
// "<br><br>";
// test.sql;
    
    
  
    // who = sql("SELECT uid FROM sr_transaction WHERE status = 'succeeded' AND year(sn_cdate) = 2020 AND month(sn_cdate) = 1 AND quickbooks is null ORDER BY uid DESC LIMIT 20");
    
    // qb_realm_id = "193514830636359";
    
    // for w in who.rows do
    //     contractor::createSalesReceipt(w.uid, qb_realm_id);
    // endfor
}}