
<style>
    #upload_files>div{
        position:relative;
    }
    #upload_files > div > input {
        margin:3px 0px;
    }
    #upload_files > div > a {
        display:block;
        cursor: pointer;
        position:absolute;
        right:0;
        top:50%;
        margin-top:-10px;
    }
    #upload_files > div > a > i:before {
        content: "\f1f8"; /* fa-trash */
    }
    #upload_files > div:first-child > a > i:before {
        content: "\f067"; /* fa-plus */
    }
    [data-validator-error]{
        color:red;
        font-weight:bold;
    }
    

.center
{
    width: auto;
}


.center img
{
    height: 50px;
    width: 50px;
}


.validemail{
    color: #f4aa42;
    font-size:12px;
    font-weight:bold;
}
</style>
{{
    use page;
    cookies = cookies();
}}
<div class="well custom-well">
    <form class="form-horizontal" enctype="multipart/form-data" action="/fr/information-additionnelle-client" id="add_client" name="add_client" method="POST">
        <fieldset class="form-group">
            <label for="name" class="control-label col-md-4">
                <span class="sn_pencil sn_small" data-sn_title1="Edit ct" data-sn_class1="pencil" data-sn_link1="/extenso/extranet/ct/fr/edit?sn_modal=t&uid=4847">client_form Votre nom</span>*
            </label>
            <div class="col-md-8">
                <input class="form-control" type="text" name="name" id="name" value="">
                <span class="help-block LoNotSensitive" data-validator-msg="Invalid name" data-validator-error="name"></span>
            </div>
        </fieldset>
        
        <fieldset class="form-group">
            <label for="phone" class="control-label col-md-4">
                <span class="sn_pencil sn_small" data-sn_title1="Edit ct" data-sn_class1="pencil" data-sn_link1="/extenso/extranet/ct/fr/edit?sn_modal=t&uid=4849">client_form Votre téléphone</span>*
            </label>
            <div class="col-md-8">
                <input class="form-control" type="text" name="phone" id="phone" value="">
                <span class="help-block LoNotSensitive" data-validator-msg="Invalid phone" data-validator-error="phone"></span>
            </div>
        </fieldset>
        
        <fieldset class="form-group">
            <label class="control-label col-md-4" for="email">
                <span class="sn_pencil sn_small" data-sn_title1="Edit ct" data-sn_class1="pencil" data-sn_link1="/extenso/extranet/ct/fr/edit?sn_modal=t&uid=4851">client_form Votre courriel</span>*
            </label>
            <div class="col-md-8">
                <input class="form-control" type="text" name="email" id="email" onfocusout="validate_email()" value="">
                <span class="help-block LoNotSensitive" data-validator-msg="Invalid email" data-validator-error="email"></span>
                <span style="display:none" class="validemail" name="validemail" >Attention: la validation du courriel a échouée. Si c'est le bon courriel, je vous prie d'ignorer ce message.</span>
            </div>
        </fieldset>
        <fieldset class="form-group">
            <label for="address" class="control-label col-md-4">
                <span class="sn_pencil sn_small" data-sn_title1="Edit ct" data-sn_class1="pencil" data-sn_link1="/extenso/extranet/ct/fr/edit?sn_modal=t&uid=4854">client_form Votre adresse</span>*
            </label>
            <div class="col-md-8">
                <input class="form-control LoNotSensitive" type="text" name="address" id="address" value="" onFocus="geolocate()" placeholder="">
                <input type="hidden" class="field" id="street_number" name="street_number" disabled="true"></input>
                <input type="hidden" class="field" id="route" name="route" disabled="true"></input>
                <input type="hidden" class="field" id="locality" name="locality" disabled="true"></input>
                <input type="hidden" class="field" id="administrative_area_level_1" name="administrative_area_level_1" disabled="true"></input>
                <input type="hidden" class="field" id="postal_code" name="postal_code" disabled="true"></input>
                <input type="hidden" class="field" id="country" name="country" disabled="true"></input>
                <span class="help-block" data-validator-msg="Invalid address" data-validator-error="address"></span>
            </div>
                
        </fieldset>
        
        <fieldset class="form-group">
            <label for="description" class="control-label col-md-4"
                <span class="sn_pencil sn_small" data-sn_title1="Edit ct" data-sn_class1="pencil" data-sn_link1="/extenso/extranet/ct/fr/edit?sn_modal=t&uid=4856">client_form Votre projet</span>*
            </label>
            <div class="col-md-8">
                <textarea class="form-control LoNotSensitive" name="description" placeholder='client_form ex. : Description des travaux à faire dans vos mots, délai de réalisation, budget, etc.' rows="5"></textarea>    
                <span class="help-block" data-validator-msg="Invalid description" data-validator-error="description"></span>
            </div>
        </fieldset>
    
        <fieldset class="form-group">
            <label class="control-label col-md-4 LoNotSensitive"><span class="sn_pencil sn_small" data-sn_title1="Edit ct" data-sn_class1="pencil" data-sn_link1="/extenso/extranet/ct/fr/edit?sn_modal=t&uid=4859">client_form Joindre un fichier</span></label>
            <div class="col-md-8" style="margin-top:3px;">
                <div id="upload_files"></div>
            </div>
        </fieldset>
        
        <input name="url" type="hidden" value="{{page.url}}">
        <input name="first_visited" type="hidden" value="{{cookies.first_visited}}">
        
        
        <p>client_form En soumettant votre projet, vous acceptez nos Conditions d'utilisation</p>
        
        <div class="form-group">
            <div class="col-md-offset-4 col-md-8">
                <button id="submit_add_client" type="submit" class="btn btn-primary">
                    client_form Soumettre
                </button>
                <input type='hidden' name='emailChk' id='emailChk'/>
            </div>
        </div>


        <script>
            function addUploadFile() {
                return $('<div><input type="file" name="file"><a><i class="fa"></i></a></div>').prependTo('#upload_files');
            }
            
            $('#upload_files').on('click', "div:not(:first-child) > a", function(){
                $(this).parent().remove();
                $('#upload_files > span').remove();
            });
            $('#upload_files').on('click', "div:first-child > a", function(){
                addUploadFile();
                if ($('#upload_files').find('div > input').length >= 5) {
                    $('#upload_files').prepend('<span>');
                }
            });
            addUploadFile();
        </script>
    </form>
</div>

{{
    // include the validator for contractor_form
    %include "/site/client_form/include/validator.sn";
    validator.startAntibot();
    // validate client side
    validator.validateJS(form:'add_client');
}}

<script>
$(document).ready(function(){
   
   
   if($("#phone").val().length < 10){
       
    }

    $('#email').on('input',function(e) {
        $(this).val($.trim($(this).val()));
    });
    
    $('#email').on('input',function(e) {
        $(this).val($.trim($(this).val()));
    });
    
    $('#email').keypress(function(e) {
        if(e.which === 32) 
            return false;
    });
    
    
    $('#email').on('input',function(e) {
           $('.validemail').hide();
    });   

})
</script>


<script>
function validate_email(){
    if( isValidEmailAddress($('#email').val())){
        if($('#emailChk').val() != $('#email').val()){
            $.ajax({
                type: "POST",
                url: "/fr/ajax_verify_email.sn",
                data: {'neverbounce':$('#email').val()},
                beforeSend: function(){
                    if ($('#email').val() == ""){
                        return false;
                    }
                    
                    $(".center").show();
                },
        
                success: function(data, statusText, xhr){
                    $('#emailChk').val($('#email').val());
                    
                    if(xhr.getResponseHeader('X-response') == 0){
                        $(".center").hide();
                        $('.validemail').hide();
                        $('.address').focus();
                    }else if(xhr.getResponseHeader('X-response') == 1){
                        $(".center").hide();
                        $('.validemail').show();
                        $('.address').focus();
                    }else{
                        
                    }
                },
                
                complete: function(data, statusText, xhr) {
                    $(".center").hide();
                }
            });
        }
    }
}


function isValidEmailAddress(emailAddress) {
    var pattern = /^([a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+(\.[a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)*|"((([ \t]*\r\n)?[ \t]+)?([\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*(([ \t]*\r\n)?[ \t]+)?")@(([a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.)+([a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.?$/i;
    return pattern.test(emailAddress);
};
</script>


<script>
    // separate files 
    $('form[name=add_client]').submit(function(e){
        var file_nb = 0;
        
        // if($('#emailChk').val() != $('#email').val()){
        //     e.preventDefault();
        //     $(".center").show();
        // }
        
        $('#upload_files').find('div > input').each(function(){
            file_nb++;
            $(this).attr("name", $(this).attr("name") + file_nb);
        });
    });
</script>






<!-- Google map api for addresses -->
<script>
// This example displays an address form, using the autocomplete feature
// of the Google Places API to help users fill in the information.

var placeSearch, autocomplete, autocomplete_slim;
var componentForm = {
  street_number: 'short_name',
  route: 'long_name',
  locality: 'long_name',
  administrative_area_level_1: 'short_name',
  country: 'long_name',
  postal_code: 'short_name'
};

function initAutocomplete() {
  // Create the autocomplete object, restricting the search to geographical
  // location types.
  autocomplete = new google.maps.places.Autocomplete(
      /** @type {!HTMLInputElement} */(document.getElementById('address')),
      {types: ['geocode']});
      
  // When the user selects an address from the dropdown, populate the address
  // fields in the form.
  autocomplete.addListener('place_changed', fillInAddress);
  autocomplete.name="normal";


  // For the second form in the article_detail page (slim)
  if (document.getElementById('address_slim')){
      autocomplete_slim = new google.maps.places.Autocomplete(
          /** @type {!HTMLInputElement} */(document.getElementById('address_slim')),
          {types: ['geocode']});
      autocomplete_slim.addListener('place_changed', fillInAddress);
      autocomplete_slim.name="slim";
    }
}

// [START region_fillform]
function fillInAddress() {
  // Get the place details from the autocomplete object.
  var place = this.getPlace();
  index = (this.name === "normal") ? 0 : 1 ;
    
  for (var component in componentForm) {
    document.getElementsByName(component)[index].value = '';
    document.getElementsByName(component)[index].disabled = false;
  }

  // Get each component of the address from the place details
  // and fill the corresponding field on the form.
  for (var i = 0; i < place.address_components.length; i++) {
    var addressType = place.address_components[i].types[0];
    if (componentForm[addressType]) {
      var val = place.address_components[i][componentForm[addressType]];
      document.getElementsByName(addressType)[index].value = val;
    }
  }
}
// [END region_fillform]

// [START region_geolocation]
// Bias the autocomplete object to the user's geographical location,
// as supplied by the browser's 'navigator.geolocation' object.
    function geolocate() {
      if (navigator.geolocation) {
    //     navigator.geolocation.getCurrentPosition(function(position) {
    //       var geolocation = {
    //         lat: position.coords.latitude,
    //         lng: position.coords.longitude
    //       };
    //       var circle = new google.maps.Circle({
    //         center: geolocation,
    //         radius: position.coords.accuracy
    //       });
    //      autocomplete.setBounds(circle.getBounds());
    //     });
       }
    }
// [END region_geolocation] 

</script>
<script src="https://maps.googleapis.com/maps/api/js?signed_in=true&libraries=places&callback=initAutocomplete&key=AIzaSyD7PI5ZfU6ZnTr0iwxYKpdb7kTDNiHw1e8"async defer></script>
