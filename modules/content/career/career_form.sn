{{ 
    //
    // Name:        career
    //				ressource /modules/content/career/career_form.sn 
    //				this page is called using AJAX
    //
    // Description: Widget to display careers opportunities
    //  
    // Parameters:  none so far
	//				use lg
    //				use widget
    //
    //				1.0 2015-03-25 manu@i-manu.com
	//				1.1 2015-04-06 ilya@sednove.com Candidature spontane
	//				1.2 2015-04-06 ilya@sednove.com sn_ct "career_email_to"
	//				1.3 2015-04-07 ilya@sednove.com Upload de cv ( enctype="multipart/form-data" ; fonction submitForm ; sauvegarde du fichier )
	//				1.4 2015-04-09 manu@i-manu.com Correction of a bad modification in the form validation, it's now validating correctly again
    //				1.5 2015-04-10 ilya@sednove.com Utilisation de la variable 'sn_fullname' au lieu de 'filename'
	//				1.6 2015-04-10 ilya@sednove.com Site settings context (url_staging, url_prod etc.)
}}
{{

	use widget;
	use uid;
	use table;
	use lg;
	use ressource;
	
	%include "/extenso/functions/sn_ct.snc";
	%include "/extenso/functions/sn_pages.snc";
}}
\{{ 
	headers_out("Pragma", "no-cache");
	headers_out("Cache-Control", "no-cache");
	headers_out("Cache-Control", "no-store");
	
	use user;
	
	// ilya@sednove.com 2015-04-11 Site settings context
	site_cont = sql(single:true,"select * from sn_configs where uid=1");
	
    config=config(); 
    request=request();
	dir_upload = "/" .+ config.site .+ "/career/";
	cgidata = cgidata(disable_upload:false,directory:"/sn_uploads"
,resume:{'directory':'/extenso/html/extranet/sn_uploads/','url':'/extenso/extranet/sn_uploads/'}
);
    ctx_email_to = sql(single:true,"select email_to from mod_config_carreer where uid=1");
    email_to = ctx_email_to.rows.email_to;
    // ct
	//email_to = "{{sn_ct(edit:false,"career_email_to", module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}";
	
	page={"uid":"{{page.rows.uid}}","url":"{{page.rows{'folder_' .+ lg.rows.lg}; page.rows{'page_' .+ lg.rows.lg};}}"}; // use by menus

	// if there is a parameter jobid (coming from the main page of the widget career.sn),
    //	we select the title of the job and show the subscription form
if cgidata.jobid ne "" then
	lau_career = sql(single:true, "select * from mod_ats_career where active = 'yes' and publication_date <= sysdate() and uid=?;", cgidata.jobid);
	if cgidata.jobid == 0 then
		job_title = "{{sn_ct("CANDIDATURE SPONTANÉE",edit:"false", publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}";
	else
		job_title = lau_career.rows.job_title_{{lg.rows.lg}};
	endif
}}

	{{// jquery for manipulating forms }}
	<script src="//malsup.github.com/jquery.form.js"></script>
	{{// jquery for validation of fields according to some rules }}
	<script src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.13.1/jquery.validate.js"></script>

    <div class="col-md-8 col-md-offset-2">
        <div class="wdg_job form">

            {{// TITLE OF THE JOB }}
            <h2><small>{{sn_ct("Vous postulez présentement pour :", lg:lg.rows.lg, module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}</small> <br/>
                    	\{{job_title;}}
                        </h2>

            <hr/>
            <!-- FORM TO APPLY TO A JOB -->
            <form name="resume" id="resume" method="post" action="?" enctype="multipart/form-data">
            	<input type="hidden" id="submitjobid" name="submitjobid" value="\{{cgidata.jobid}}"/>
                <div class="form-group">
                    <label for="fullname">{{sn_ct("Full name *", lg:lg.rows.lg, module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}</label>
                    <input type="text" id="fullname" name="fullname" class="form-control" placeholder="{{sn_ct("Enter your name here",edit:false , lg:lg.rows.lg, publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}" Required="True">
                </div>
                <div class="form-group">
                    <label for="email_resume">{{sn_ct("Email *", lg:lg.rows.lg, module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}</label>
                    <input type="email" id="email_resume" name="email_resume" class="form-control" placeholder="{{sn_ct("your@email.com",edit:false , lg:lg.rows.lg, publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}" Required="True">
                </div>
                <div class="form-group">
                    <label for="upload_file">{{sn_ct("Upload your CV", lg:lg.rows.lg, module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}</label>
                    <input type="file" id="upload_file" name="upload_file" {{// "size='40'" }} />
                </div>
                <div class="form-group">
                    <label for="linkedin">{{sn_ct("Linkedin url account", lg:lg.rows.lg, module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}</label>
                    <input type="url" id="linkedin" name="linkedin" class="form-control" placeholder="{{sn_ct("Enter your linkedin account url",edit:false , lg:lg.rows.lg, publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}">
                </div>

                <div class="form-group">
                    <label for="comment">{{sn_ct("Comment", lg:lg.rows.lg, module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}</label>
                    <textarea class="form-control" rows="3" id="comment" name="comment"></textarea>
                </div>

                <p><small>{{sn_ct("fields mark with * are required", lg:lg.rows.lg, module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}</small>
                </p>
                <!-- SHOW THE ALERT IF ERROR ON SUBMIT -->
<!--
                <div class="alert alert-danger" role="alert">Error message here</div>
-->                
				<div style="clear:both;">
					<a href="javascript:showJobList();" class="btn btn-default" style="float:left;">{{sn_ct("Back", lg:lg.rows.lg, module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}</a>
					{{// the jquery valide script detect the submit and will validate the form before submitting it. }}
                	<div id="resume_submit" style="float:right;">
	               		 <button type="submit" class="btn btn-primary pull-right">{{sn_ct("Submit", lg:lg.rows.lg, module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}</button>
                	</div>
				</div>
				<div style="clear:both;"></div>
            </form>
        </div>
    </div>

{{// jquery validate script that validate the fields according the rules and display messages if needed}}
	<script>
	// validate resume form on keyup and submit
			$("#resume").validate({
				{{// javascript function to execute to submit the form}}
				submitHandler: submitForm,
				{{// rules for each fields}}
				rules: {
					fullname: {
						required: true
					},
					email: {
						required: true,
						email: true
					},
					linkedin: {
						url: true
					},
				},
				{{// messages to display when the content of the fields doesn't fit match the rules}}
				messages: {
					fullname: "{{sn_ct("Please enter your full name",edit:false, lg:lg.rows.lg, module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}",
					email_resume: "{{sn_ct("Please enter a valid email address",edit:false, lg:lg.rows.lg, module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}",
					linkedin: "{{sn_ct("Please enter a valid address",edit:false, lg:lg.rows.lg, module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}"
				}
			});
			
	{{// function to submit the form using AJAX, the result is sent back to the javascript function "submitSuccess"}}
	function submitForm(){
		// $("#resume").ajaxSubmit({url: '{{sn_pages("career_form",lg.rows.lg,table:"ressources")}}', type: 'post', success: submitSuccess});
		 /* var formData = $("#resume").serialize();
		
		 var $form = $('#resume');
         var formData = new FormData();
         var img = $form.find("#upload_file")[0].files[0];
         if (img) { //
             formData.append("upload_file", img);
         }
		 
		$.ajax({//
			type: 'post',
			url:'{{sn_pages("career_form",lg.rows.lg,table:"ressources")}}',
			data: formData,
			dataType: 'html',
           // cache : false,
           // contentType : false,
          //  processData : false,
			success: function(msg){//
				submitSuccess(msg);
			}
		});
		*/

		$("#resume").ajaxSubmit({
			url: "{{sn_pages("career_form",lg.rows.lg,table:"ressources")}}",
			success: function(responseText, statusText, xhr, $form)  { 
				console.log("after save");
				submitSuccess(responseText);
			}
		}); 
	}
	{{// function that show if the submission is a success or not }}
	function submitSuccess(data){
		{{// if submission is success, display "success message" }}
		if (data.indexOf("true") > -1){
			{{// display the job title in the div "wdg_job_result_good" }}
			$("#jobtitle").html("\{{job_title}}")
			{{// this Div is in the main page of the widget "career.sn" }}
			showResultGood();
		{{// if not good, display "error message" }}
		}else{
			{{// this Div is in the main page of the widget "career.sn" }}
			//alert(data);
			showResultError();
		}
	}
	</script>



{{
// if the form is submitted, we get a submitjobid so we can insert the submission to the database and send e-mail to the administrator }}
\{{ elseif cgidata.submitjobid ne "" then
	
	lau_career = sql(single:true, "select * from mod_ats_career where active = 'yes' and publication_date <= sysdate() and uid=?;", cgidata.submitjobid);
	job_comment = cgidata.comment;
	 jobid = cgidata.submitjobid;
	if cgidata.submitjobid == 0 then
		job_title = "{{sn_ct("CANDIDATURE SPONTANÉE",edit:"false", module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}";
        jobid = 3; 
	else
		job_title = lau_career.rows.job_title_{{lg.rows.lg}};
	endif

	// detect if there is a file uploaded... if we don't do this, garbage will be uploaded.

	upload_file = "";
	sn_ct_upload_file = "";
	if cgidata.upload_file.filename ne "" then
		 // ilya@sednove.com 2015-04-10 - We have to use the 'sn_fullname' and not the 'filename' because applied filters in the saving (filenames with spaces)
		 upload_file = cgidata.upload_file.sn_fullname;
		 upload_file = upload_file.resub("/staging","");
		 upload_file = upload_file.resub("/html","");
		 
		 sn_ct_upload_file = "application/octet-stream";
	endif
	
	// insert into database
	result=insert(table:"mod_ats_application",fields:{"submission_date":datetime(),"name":cgidata.fullname,"email":cgidata.email_resume,"resume":upload_file,"sn_ct_resume":sn_ct_upload_file,"sn_dir_resume":cgidata.upload_file.sn_fullname,"linkedin":cgidata.linkedin,"comment":job_comment,"uid_career":jobid});
	// if the result is good, we send back "true"
	if result.sqlcode eq "0" then
		"true";
	else
		"false";
	endif
	
	if cgidata.email_resume =~ "^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$" then
		// load the content of the email
		//email_from = "{{sn_ct(edit:false,"career_email_from", module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}";
        ctx_email_from = sql(single:true,"select email_from from mod_config_carreer where uid=1");
        email_from = ctx_email_from.rows.email_from;
		// email_to = cgidata.email_resume;
        
		if user.username eq "ilya" then
			email_to = "ilya@sednove.com";
		endif
		if user.username eq "emmanuel" then
			email_to = "manu@i-manu.com";
		endif
		email_subject = "{{sn_ct(edit:false, "career_email_subject", module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}} " .+ job_title;
		//email_message = "<html><head><title>Message</title></head><body>{{sn_ct(edit:false, "Poste:", publish:"/publish/ressources.sn", uids:ressource.rows.uid)}} " .+ job_title .+ "<br />{{sn_ct(edit:false, "Nom:", publish:"/publish/ressources.sn", uids:ressource.rows.uid)}} " .+ cgidata.fullname .+ "<br />{{sn_ct(edit:false, "Email:", publish:"/publish/ressources.sn", uids:ressource.rows.uid)}} " .+ cgidata.email_resume .+ "<br />{{sn_ct(edit:false, "Commentaire:", publish:"/publish/ressources.sn", uids:ressource.rows.uid)}} " .+ cgidata.comment .+ "</body></html> ";
	   
			
			
		// e-mail template is using some parameters to display the content	
		laurentien_email_alt_logo = "Laurentien";
		laurentien_email_alt_banner = "";
		laurentien_email_title1 = "{{sn_ct(edit:false, "career_email_title", module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}";

		laurentien_email_content1 = "<html><head><title>Message</title></head><body>{{sn_ct(edit:false, "Poste:", module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}} " .+ job_title .+ "<br />" .+
			"{{sn_ct(edit:false, "Nom:", module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}} " .+ cgidata.fullname .+ "<br />" .+
			"{{sn_ct(edit:false, "Email:", module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}} " .+ cgidata.email_resume .+ "<br />" .+
			"{{sn_ct(edit:false, "Linkedin:", module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}} <a href='" .+ cgidata.linkedin .+ "'>" .+ cgidata.linkedin .+ "</a><br />" .+
			"{{sn_ct(edit:false, "Commentaire:", module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}} " .+ cgidata.comment .+
			"</body></html> ";
		
		// ilya@sednove.com 2015-04-11 	URL initialization 
		server_link = site_cont.rows.url_prod;
		if config.site eq "staging" then
			server_link = site_cont.rows.url_staging;
		endif
		laurentien_email_link = server_link .+ upload_file;
        
        // **** to activate after valiation ****
        // manu@i-manu.com 2015-05-07 Path of the resume in the file system.
        // 	Encode it in SHA1 with the uid for downloading the file using "sendfile"
        // 	Use the ressource laurentien_email_resume_download + parameter resume_id
        sha1_resumecode=result.uid .+ cgidata.upload_file.sn_fullname;
        laurentien_email_link = server_link .+ "{{sn_pages("laurentien_email_resume_download",lg.rows.lg,table:"ressources")}}".+"?resume_id=".+sha1(sha1_resumecode);

		laurentien_email_link_title ="{{sn_ct(edit:false, "Document", module:'ats', publish:"/publish/ressources.sn", uids:ressource.rows.uid)}}";
		laurentien_email_title2 = "";

		// use the ressource "laurentien_email_template" to send the e-mail. This ressource "use" variables to fill the e-mail content.

		// this is for debugging purpose
		if user.username eq "ilya" then
			 // "compilefile: {{sn_pages("laurentien_email_template",lg.rows.lg,table:"ressources")}}";
		endif

		email(from:email_from, 
			to:email_to, 
            charset:"utf-8",
			encoding:"base64",
			ct:"text/html", 
			subject: email_subject, 
            compilefile: "/staging{{sn_pages("mod_email_template",lg.rows.lg,table:"ressources")}}"
			//binaryfile: "{{sn_pages("mod_email_template",lg.rows.lg,table:"ressources")}}"
           // message:"test 11 avec des accents.... ete ou hiver version 1.2"          
		);

	
		
	endif
}}
\{{else //if no jobid or submitjobid, we refuse the connexion}}
<script>
	showResultError();
</script>
\{{endif}}
